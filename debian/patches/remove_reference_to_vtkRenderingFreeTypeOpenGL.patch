--- a/src/avt/Pipeline/CMakeLists.txt
+++ b/src/avt/Pipeline/CMakeLists.txt
@@ -266,7 +266,7 @@
                                            visit_vtk lightweight_visit_vtk vtkCommonCore 
                                            vtkCommonDataModel vtkFiltersGeometry 
                                            vtkRenderingOpenGL vtkRenderingFreeType 
-                                           vtkRenderingFreeTypeOpenGL vtkInteractionStyle 
+                                           vtkInteractionStyle 
                                            ${ZLIB_LIB} ${EAVL_LIB} ${VTKM_LIB})
 
 IF(HAVE_LIB_R)
@@ -285,7 +285,6 @@
                                               visit_vtk lightweight_visit_vtk vtkCommonCore 
                                               vtkCommonDataModel vtkFiltersGeometry 
                                               vtkRenderingOpenGL vtkRenderingFreeType 
-                                              vtkRenderingFreeTypeOpenGL 
                                               vtkInteractionStyle ${ZLIB_LIB} 
                                               ${EAVL_LIB} ${VTKM_LIB})
     IF(HAVE_LIB_R)
--- a/src/avt/Plotter/CMakeLists.txt
+++ b/src/avt/Plotter/CMakeLists.txt
@@ -226,9 +226,9 @@
 #********************************* SERIAL ************************************
 ADD_LIBRARY(avtplotter_ser ${AVTPLOTTER_SOURCES})
 IF(HAVE_LIB_R)
-    TARGET_LINK_LIBRARIES(avtplotter_ser visitcommon avtmath avtview avtfilters_ser avtpipeline_ser visit_vtk lightweight_visit_vtk vtkFiltersHybrid vtkRenderingCore vtkRenderingFreeType vtkRenderingFreeTypeOpenGL ${GLEW_LIB} vtkFiltersStatisticsGnuR)
+    TARGET_LINK_LIBRARIES(avtplotter_ser visitcommon avtmath avtview avtfilters_ser avtpipeline_ser visit_vtk lightweight_visit_vtk vtkFiltersHybrid vtkRenderingCore vtkRenderingFreeType ${GLEW_LIB} vtkFiltersStatisticsGnuR)
 ELSE(HAVE_LIB_R)
-    TARGET_LINK_LIBRARIES(avtplotter_ser visitcommon avtmath avtview avtfilters_ser avtpipeline_ser visit_vtk lightweight_visit_vtk vtkFiltersHybrid vtkRenderingCore vtkRenderingFreeType vtkRenderingFreeTypeOpenGL ${GLEW_LIB})
+    TARGET_LINK_LIBRARIES(avtplotter_ser visitcommon avtmath avtview avtfilters_ser avtpipeline_ser visit_vtk lightweight_visit_vtk vtkFiltersHybrid vtkRenderingCore vtkRenderingFreeType ${GLEW_LIB})
 ENDIF(HAVE_LIB_R)
 # Add vtk defines
 ADD_TARGET_DEFINITIONS(avtplotter_ser "${VTK_DEFINITIONS}")
@@ -249,9 +249,9 @@
 IF(VISIT_PARALLEL)
     ADD_PARALLEL_LIBRARY(avtplotter_par ${AVTPLOTTER_SOURCES})
     IF(HAVE_LIB_R)
-        TARGET_LINK_LIBRARIES(avtplotter_par visitcommon avtmath avtview avtfilters_par avtpipeline_par visit_vtk lightweight_visit_vtk vtkFiltersHybrid vtkRenderingCore vtkRenderingFreeType vtkRenderingFreeTypeOpenGL ${GLEW_LIB} vtkFiltersStatisticsGnuR)
+        TARGET_LINK_LIBRARIES(avtplotter_par visitcommon avtmath avtview avtfilters_par avtpipeline_par visit_vtk lightweight_visit_vtk vtkFiltersHybrid vtkRenderingCore vtkRenderingFreeType ${GLEW_LIB} vtkFiltersStatisticsGnuR)
     ELSE(HAVE_LIB_R)
-        TARGET_LINK_LIBRARIES(avtplotter_par visitcommon avtmath avtview avtfilters_par avtpipeline_par visit_vtk lightweight_visit_vtk vtkFiltersHybrid vtkRenderingCore vtkRenderingFreeType vtkRenderingFreeTypeOpenGL ${GLEW_LIB})
+        TARGET_LINK_LIBRARIES(avtplotter_par visitcommon avtmath avtview avtfilters_par avtpipeline_par visit_vtk lightweight_visit_vtk vtkFiltersHybrid vtkRenderingCore vtkRenderingFreeType ${GLEW_LIB})
     ENDIF(HAVE_LIB_R)
     # Add vtk defines
     ADD_TARGET_DEFINITIONS(avtplotter_par "${VTK_DEFINITIONS}")
--- a/src/avt/View/CMakeLists.txt
+++ b/src/avt/View/CMakeLists.txt
@@ -56,7 +56,7 @@
 LINK_DIRECTORIES(${LIBRARY_OUTPUT_DIRECTORY} ${VTK_LIBRARY_DIRS})
 
 ADD_LIBRARY(avtview ${AVTVIEW_SOURCES})
-TARGET_LINK_LIBRARIES(avtview visitcommon vtkRenderingOpenGL vtkRenderingFreeType vtkRenderingFreeTypeOpenGL vtkInteractionStyle)
+TARGET_LINK_LIBRARIES(avtview visitcommon vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle)
 
 # Add vtk definitions
 ADD_TARGET_DEFINITIONS(avtview "${VTK_DEFINITIONS}")
--- a/src/tools/DataManualExamples/Simulations/CMakeLists.txt
+++ b/src/tools/DataManualExamples/Simulations/CMakeLists.txt
@@ -139,7 +139,7 @@
 ENDIF(VISIT_STATIC AND VISIT_ENABLE_XDB)
 
 SET(VTK_LIBS vtkCommonCore vtkImagingCore vtkRenderingCore vtkIOLegacy vtkIOPLY
-             vtkInteractionStyle vtkRenderingOpenGL vtkRenderingFreeTypeOpenGL
+             vtkInteractionStyle vtkRenderingOpenGL
              vtkFiltersHybrid vtkFiltersModeling vtkGeovisCore)
 IF(ICET_FOUND)
     LINK_DIRECTORIES(${ICET_LIBRARY_DIR})
--- a/src/tools/annotations/CMakeLists.txt
+++ b/src/tools/annotations/CMakeLists.txt
@@ -54,9 +54,9 @@
 # Specify the libraries to link against
 TARGET_LINK_LIBRARIES(text2polys vtkIOLegacy)
 IF(HAVE_LIB_R)
-TARGET_LINK_LIBRARIES(time_annotation vtkRenderingOpenGL vtkRenderingFreeType vtkRenderingFreeTypeOpenGL vtkInteractionStyle vtkFiltersStatisticsGnuR vtksys vtkIOImage)
+TARGET_LINK_LIBRARIES(time_annotation vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle vtkFiltersStatisticsGnuR vtksys vtkIOImage)
 ELSE(HAVE_LIB_R)
-TARGET_LINK_LIBRARIES(time_annotation vtkRenderingOpenGL vtkRenderingFreeType vtkRenderingFreeTypeOpenGL vtkInteractionStyle vtksys vtkIOImage)
+TARGET_LINK_LIBRARIES(time_annotation vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle vtksys vtkIOImage)
 ENDIF(HAVE_LIB_R)
 # add vtk definitions
 ADD_TARGET_DEFINITIONS(time_annotation "${VTK_DEFINITIONS}")
--- a/src/tools/diagnostics/osmesatest/CMakeLists.txt
+++ b/src/tools/diagnostics/osmesatest/CMakeLists.txt
@@ -67,7 +67,6 @@
 vtkRenderingCore
 vtkRenderingOpenGL
 vtkRenderingFreeType 
-vtkRenderingFreeTypeOpenGL
 vtkInteractionStyle 
 )
 
--- a/src/visit_vtk/full/CMakeLists.txt
+++ b/src/visit_vtk/full/CMakeLists.txt
@@ -130,9 +130,9 @@
 ADD_LIBRARY(visit_vtk ${VISIT_VTK_SOURCES})
 
 IF(HAVE_LIB_R)
-    TARGET_LINK_LIBRARIES(visit_vtk lightweight_visit_vtk vtkFiltersExtraction vtkFiltersFlowPaths vtkImagingHybrid vtkRenderingOpenGL vtkRenderingFreeType vtkRenderingFreeTypeOpenGL vtkInteractionStyle vtktiff vtkFiltersStatisticsGnuR)
+    TARGET_LINK_LIBRARIES(visit_vtk lightweight_visit_vtk vtkFiltersExtraction vtkFiltersFlowPaths vtkImagingHybrid vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle vtktiff vtkFiltersStatisticsGnuR)
 ELSE(HAVE_LIB_R)
-    TARGET_LINK_LIBRARIES(visit_vtk lightweight_visit_vtk vtkFiltersExtraction vtkFiltersFlowPaths vtkImagingHybrid vtkRenderingOpenGL vtkRenderingFreeType vtkRenderingFreeTypeOpenGL vtkInteractionStyle vtktiff)
+    TARGET_LINK_LIBRARIES(visit_vtk lightweight_visit_vtk vtkFiltersExtraction vtkFiltersFlowPaths vtkImagingHybrid vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle vtktiff)
 ENDIF(HAVE_LIB_R)
 # Add vtk definitions
 ADD_TARGET_DEFINITIONS(visit_vtk "${VTK_DEFINITIONS}")
--- a/src/vtkqt/CMakeLists.txt
+++ b/src/vtkqt/CMakeLists.txt
@@ -76,9 +76,9 @@
 
 # Specify the libraries to link against on Windows & Mac
 IF(HAVE_LIB_R)
-        TARGET_LINK_LIBRARIES(vtkqt vtkCommonCore vtkGUISupportQtOpenGL vtkIOImage vtkRenderingOpenGL vtkRenderingFreeTypeOpenGL ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${QT_QTOPENGL_LIBRARY} ${OPENGL_gl_LIBRARY} vtkFiltersStatisticsGnuR)
+        TARGET_LINK_LIBRARIES(vtkqt vtkCommonCore vtkGUISupportQtOpenGL vtkIOImage vtkRenderingOpenGL ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${QT_QTOPENGL_LIBRARY} ${OPENGL_gl_LIBRARY} vtkFiltersStatisticsGnuR)
 ELSE(HAVE_LIB_R)
-         TARGET_LINK_LIBRARIES(vtkqt vtkCommonCore vtkGUISupportQtOpenGL vtkIOImage vtkRenderingOpenGL vtkRenderingFreeTypeOpenGL ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${QT_QTOPENGL_LIBRARY} ${OPENGL_gl_LIBRARY})
+         TARGET_LINK_LIBRARIES(vtkqt vtkCommonCore vtkGUISupportQtOpenGL vtkIOImage vtkRenderingOpenGL ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${QT_QTOPENGL_LIBRARY} ${OPENGL_gl_LIBRARY})
 ENDIF(HAVE_LIB_R)
 
 IF(APPLE)
--- a/src/tools/diagnostics/osmesatest/osmesavtktest.cpp
+++ b/src/tools/diagnostics/osmesatest/osmesavtktest.cpp
@@ -1,5 +1,5 @@
 // This junk is needed to make VTK work on startup.
-#define vtkRenderingCore_AUTOINIT 4(vtkInteractionStyle,vtkRenderingFreeType,vtkRenderingFreeTypeOpenGL,vtkRenderingOpenGL)
+#define vtkRenderingCore_AUTOINIT 4(vtkInteractionStyle,vtkRenderingFreeType,vtkRenderingOpenGL)
 
 #include <vtkActor.h>
 #include <vtkActor2D.h>
