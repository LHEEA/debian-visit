Index: visit/src/vtkqt/CMakeLists.txt
===================================================================
--- visit.orig/src/vtkqt/CMakeLists.txt
+++ visit/src/vtkqt/CMakeLists.txt
@@ -64,9 +64,9 @@ ADD_LIBRARY(vtkqt ${VTKQT_SOURCES})
 
 # Specify the libraries to link against on Windows & Mac
 IF(HAVE_LIB_R)
-    TARGET_LINK_LIBRARIES(vtkqt vtkCommonCore vtkGUISupportQtOpenGL vtkIOImage vtkRenderingOpenGL vtkRenderingFreeTypeOpenGL ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${QT_QTOPENGL_LIBRARY} ${OPENGL_gl_LIBRARY} vtkFiltersStatisticsGnuR)
+    TARGET_LINK_LIBRARIES(vtkqt vtkCommonCore vtkGUISupportQtOpenGL vtkIOImage vtkRenderingOpenGL ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${QT_QTOPENGL_LIBRARY} ${OPENGL_gl_LIBRARY} vtkFiltersStatisticsGnuR)
 ELSE(HAVE_LIB_R)
-    TARGET_LINK_LIBRARIES(vtkqt vtkCommonCore vtkGUISupportQtOpenGL vtkIOImage vtkRenderingOpenGL vtkRenderingFreeTypeOpenGL ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${QT_QTOPENGL_LIBRARY} ${OPENGL_gl_LIBRARY})
+    TARGET_LINK_LIBRARIES(vtkqt vtkCommonCore vtkGUISupportQtOpenGL vtkIOImage vtkRenderingOpenGL ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${QT_QTOPENGL_LIBRARY} ${OPENGL_gl_LIBRARY})
 ENDIF(HAVE_LIB_R)
 # Add vtk definitions
 ADD_TARGET_DEFINITIONS(vtkqt "${VTK_DEFINITIONS}")
Index: visit/src/tools/annotations/CMakeLists.txt
===================================================================
--- visit.orig/src/tools/annotations/CMakeLists.txt
+++ visit/src/tools/annotations/CMakeLists.txt
@@ -54,9 +54,9 @@ ADD_EXECUTABLE(time_annotation time_anno
 # Specify the libraries to link against
 TARGET_LINK_LIBRARIES(text2polys vtkIOLegacy)
 IF(HAVE_LIB_R)
-TARGET_LINK_LIBRARIES(time_annotation vtkRenderingOpenGL vtkRenderingFreeType vtkRenderingFreeTypeOpenGL vtkInteractionStyle vtkFiltersStatisticsGnuR vtksys vtkIOImage)
+	TARGET_LINK_LIBRARIES(time_annotation vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle vtkFiltersStatisticsGnuR vtksys ${VTK_LIBRARIES})
 ELSE(HAVE_LIB_R)
-TARGET_LINK_LIBRARIES(time_annotation vtkRenderingOpenGL vtkRenderingFreeType vtkRenderingFreeTypeOpenGL vtkInteractionStyle vtksys vtkIOImage)
+	TARGET_LINK_LIBRARIES(time_annotation vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle vtksys ${VTK_LIBRARIES})
 ENDIF(HAVE_LIB_R)
 # add vtk definitions
 ADD_TARGET_DEFINITIONS(time_annotation "${VTK_DEFINITIONS}")
Index: visit/src/avt/View/CMakeLists.txt
===================================================================
--- visit.orig/src/avt/View/CMakeLists.txt
+++ visit/src/avt/View/CMakeLists.txt
@@ -56,7 +56,7 @@ ${VTK_INCLUDE_DIRS}
 LINK_DIRECTORIES(${LIBRARY_OUTPUT_DIRECTORY} ${VTK_LIBRARY_DIRS})
 
 ADD_LIBRARY(avtview ${AVTVIEW_SOURCES})
-TARGET_LINK_LIBRARIES(avtview visitcommon vtkRenderingOpenGL vtkRenderingFreeType vtkRenderingFreeTypeOpenGL vtkInteractionStyle)
+TARGET_LINK_LIBRARIES(avtview visitcommon vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle)
 
 # Add vtk definitions
 ADD_TARGET_DEFINITIONS(avtview "${VTK_DEFINITIONS}")
Index: visit/src/gui/CMakeLists.txt
===================================================================
--- visit.orig/src/gui/CMakeLists.txt
+++ visit/src/gui/CMakeLists.txt
@@ -393,6 +393,7 @@ ${QT_QTNETWORK_INCLUDE_DIR}
 ${QT_QTXML_INCLUDE_DIR} 
 ${QT_QTUITOOLS_INCLUDE_DIR}
 ${QWT_INCLUDE_DIR}
+/usr/include/qwt/
 )
 
 LINK_DIRECTORIES(${LIBRARY_OUTPUT_DIRECTORY}
Index: visit/src/visit_vtk/full/vtkVisItProbeFilter.C
===================================================================
--- visit.orig/src/visit_vtk/full/vtkVisItProbeFilter.C
+++ visit/src/visit_vtk/full/vtkVisItProbeFilter.C
@@ -193,36 +193,36 @@ int vtkVisItProbeFilter::RequestInformat
   outInfo->Set(vtkStreamingDemandDrivenPipeline::WHOLE_EXTENT(),
                inInfo->Get(vtkStreamingDemandDrivenPipeline::WHOLE_EXTENT()),
                6);
-  outInfo->Set(vtkStreamingDemandDrivenPipeline::MAXIMUM_NUMBER_OF_PIECES(),
-               inInfo->Get(vtkStreamingDemandDrivenPipeline::MAXIMUM_NUMBER_OF_PIECES()));
+  // outInfo->Set(vtkStreamingDemandDrivenPipeline::MAXIMUM_NUMBER_OF_PIECES(),
+               // inInfo->Get(vtkStreamingDemandDrivenPipeline::MAXIMUM_NUMBER_OF_PIECES()));
 
-  if (this->SpatialMatch)
-    {
-    int m1 = inInfo->Get(vtkStreamingDemandDrivenPipeline::MAXIMUM_NUMBER_OF_PIECES());
-    int m2 = sourceInfo->Get(vtkStreamingDemandDrivenPipeline::MAXIMUM_NUMBER_OF_PIECES());
-    if (m1 < 0 && m2 < 0)
-      {
-      outInfo->Set(vtkStreamingDemandDrivenPipeline::MAXIMUM_NUMBER_OF_PIECES(),
-                   -1);
-      }
-    else
-      {
-      if (m1 < -1)
-        {
-        m1 = VTK_INT_MAX;
-        }
-      if (m2 < -1)
-        {
-        m2 = VTK_INT_MAX;
-        }
-      if (m2 < m1)
-        {
-        m1 = m2;
-        }
-      outInfo->Set(vtkStreamingDemandDrivenPipeline::MAXIMUM_NUMBER_OF_PIECES(),
-                   m1);
-      }
-    }
+  // if (this->SpatialMatch)
+    // {
+    // int m1 = inInfo->Get(vtkStreamingDemandDrivenPipeline::MAXIMUM_NUMBER_OF_PIECES());
+    // int m2 = sourceInfo->Get(vtkStreamingDemandDrivenPipeline::MAXIMUM_NUMBER_OF_PIECES());
+    // if (m1 < 0 && m2 < 0)
+      // {
+      // outInfo->Set(vtkStreamingDemandDrivenPipeline::MAXIMUM_NUMBER_OF_PIECES(),
+                   // -1);
+      // }
+    // else
+      // {
+      // if (m1 < -1)
+        // {
+        // m1 = VTK_INT_MAX;
+        // }
+      // if (m2 < -1)
+        // {
+        // m2 = VTK_INT_MAX;
+        // }
+      // if (m2 < m1)
+        // {
+        // m1 = m2;
+        // }
+      // outInfo->Set(vtkStreamingDemandDrivenPipeline::MAXIMUM_NUMBER_OF_PIECES(),
+                   // m1);
+      // }
+    // }
 
   // A variation of the bug fix from John Biddiscombe.
   // Make sure that the scalar type and number of components
