--- a/src/gui/CMakeLists.txt
+++ b/src/gui/CMakeLists.txt
@@ -393,6 +393,7 @@
 ${QT_QTXML_INCLUDE_DIR} 
 ${QT_QTUITOOLS_INCLUDE_DIR}
 ${QWT_INCLUDE_DIR}
+/usr/include/qwt/
 )
 
 LINK_DIRECTORIES(${LIBRARY_OUTPUT_DIRECTORY}
--- a/src/tools/annotations/CMakeLists.txt
+++ b/src/tools/annotations/CMakeLists.txt
@@ -54,9 +54,9 @@
 # Specify the libraries to link against
 TARGET_LINK_LIBRARIES(text2polys vtkIOLegacy)
 IF(HAVE_LIB_R)
-TARGET_LINK_LIBRARIES(time_annotation vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle vtkFiltersStatisticsGnuR vtksys vtkIOImage)
+	TARGET_LINK_LIBRARIES(time_annotation vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle vtkFiltersStatisticsGnuR vtksys ${VTK_LIBRARIES})
 ELSE(HAVE_LIB_R)
-TARGET_LINK_LIBRARIES(time_annotation vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle vtksys vtkIOImage)
+	TARGET_LINK_LIBRARIES(time_annotation vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle vtksys ${VTK_LIBRARIES})
 ENDIF(HAVE_LIB_R)
 # add vtk definitions
 ADD_TARGET_DEFINITIONS(time_annotation "${VTK_DEFINITIONS}")
--- a/src/visit_vtk/full/CMakeLists.txt
+++ b/src/visit_vtk/full/CMakeLists.txt
@@ -130,9 +130,9 @@
 ADD_LIBRARY(visit_vtk ${VISIT_VTK_SOURCES})
 
 IF(HAVE_LIB_R)
-    TARGET_LINK_LIBRARIES(visit_vtk lightweight_visit_vtk vtkFiltersExtraction vtkFiltersFlowPaths vtkImagingHybrid vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle vtktiff vtkFiltersStatisticsGnuR)
+    TARGET_LINK_LIBRARIES(visit_vtk lightweight_visit_vtk vtkFiltersExtraction vtkFiltersFlowPaths vtkImagingHybrid vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle vtkFiltersStatisticsGnuR)
 ELSE(HAVE_LIB_R)
-    TARGET_LINK_LIBRARIES(visit_vtk lightweight_visit_vtk vtkFiltersExtraction vtkFiltersFlowPaths vtkImagingHybrid vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle vtktiff)
+    TARGET_LINK_LIBRARIES(visit_vtk lightweight_visit_vtk vtkFiltersExtraction vtkFiltersFlowPaths vtkImagingHybrid vtkRenderingOpenGL vtkRenderingFreeType vtkInteractionStyle)
 ENDIF(HAVE_LIB_R)
 # Add vtk definitions
 ADD_TARGET_DEFINITIONS(visit_vtk "${VTK_DEFINITIONS}")
--- a/src/tools/imagetools/CMakeLists.txt
+++ b/src/tools/imagetools/CMakeLists.txt
@@ -62,10 +62,10 @@
 )
 
 ADD_EXECUTABLE(visit_composite  ${VISIT_COMPOSITE_SOURCES})
-target_link_libraries(visit_composite vtkIOImage visit_vtk)
+target_link_libraries(visit_composite ${VTK_LIBRARIES} visit_vtk)
 
 ADD_EXECUTABLE(visit_transition ${VISIT_TRANSITION_SOURCES})
-target_link_libraries(visit_transition vtkIOImage visit_vtk)
+target_link_libraries(visit_transition ${VTK_LIBRARIES} visit_vtk)
 
 # Installation targets
 VISIT_INSTALL_TARGETS(visit_composite visit_transition)
--- a/src/mdserver/main/CMakeLists.txt
+++ b/src/mdserver/main/CMakeLists.txt
@@ -142,10 +142,7 @@
     visit_verdict 
     vtkCommonCore
     vtkIOCore 
-    vtktiff
-    ${VTKZLIB_LIB}
-    vtkpng
-    vtkjpeg
+	${VTK_LIBRARIES}
     ${ZLIB_LIB} 
     ${CMAKE_THREAD_LIBS} 
     ${DL_LIB}
--- a/src/tools/dataserver/CMakeLists.txt
+++ b/src/tools/dataserver/CMakeLists.txt
@@ -70,10 +70,7 @@
 )
 
 SET(VTK_EXTRA_LIBS
-vtktiff
-vtkjpeg
-vtkpng
-${VTKZLIB_LIB}
+${VTK_LIBRARIES}
 ${VTK_FREETYPE_LIBRARIES}
 vtkftgl
 )
--- a/src/avt/IVP/CMakeLists.txt
+++ b/src/avt/IVP/CMakeLists.txt
@@ -125,12 +125,12 @@
 
 #********************************* SERIAL ************************************
 ADD_LIBRARY(avtivp_ser ${AVTIVP_SOURCES})
-TARGET_LINK_LIBRARIES(avtivp_ser avtfilters_ser lightweight_visit_vtk visit_vtk avtmath avtview avtpipeline_ser avtdatabase_ser avtdbatts visitcommon vtkCommonCore vtkFiltersCore nek5000_interp ${NEKTAR++_LIB} ${NEKTAR++_LIBRARIES} ${NEKTAR++_TP_LIBRARIES})
+TARGET_LINK_LIBRARIES(avtivp_ser avtfilters_ser lightweight_visit_vtk visit_vtk avtmath avtview avtpipeline_ser avtdatabase_ser avtdbatts visitcommon vtkCommonCore vtkFiltersCore nek5000_interp ${NEKTAR++_LIB} ${NEKTAR++_LIBRARIES} ${NEKTAR++_TP_LIBRARIES} ${VTK_LIBRARIES})
 VISIT_INSTALL_TARGETS(avtivp_ser)
 
 #********************************* PARALLEL **********************************
 IF(VISIT_PARALLEL)
     ADD_PARALLEL_LIBRARY(avtivp_par ${AVTIVP_SOURCES})
-    TARGET_LINK_LIBRARIES(avtivp_par avtfilters_par lightweight_visit_vtk visit_vtk avtmath avtview avtpipeline_par avtdatabase_par avtdbatts visitcommon vtkCommonCore vtkFiltersCore nek5000_interp ${NEKTAR++_LIB} ${NEKTAR++_LIBRARIES} ${NEKTAR++_TP_LIBRARIES})
+	TARGET_LINK_LIBRARIES(avtivp_par avtfilters_par lightweight_visit_vtk visit_vtk avtmath avtview avtpipeline_par avtdatabase_par avtdbatts visitcommon vtkCommonCore vtkFiltersCore nek5000_interp ${NEKTAR++_LIB} ${NEKTAR++_LIBRARIES} ${NEKTAR++_TP_LIBRARIES} ${VTK_LIBRARIES})
     VISIT_INSTALL_TARGETS(avtivp_par)
 ENDIF(VISIT_PARALLEL)
--- a/src/tools/protocol/CMakeLists.txt
+++ b/src/tools/protocol/CMakeLists.txt
@@ -76,12 +76,8 @@
 )
 
 SET(VTK_EXTRA_LIBS
-vtktiff
-vtkjpeg
-vtkpng
-${VTKZLIB_LIB}
+${VTK_LIBRARIES}
 ${VTK_FREETYPE_LIBRARIES}
-vtkftgl
 )
 
 ADD_EXECUTABLE(visitprotocol dump_protocol.C ${STATIC_SOURCES})
--- a/src/tools/avtexamples/CMakeLists.txt
+++ b/src/tools/avtexamples/CMakeLists.txt
@@ -103,6 +103,7 @@
 visit_vtk
 ${ALL_THIRDPARTY_IO_LIB} 
 ${VTK_EXTRA_LIBS}
+${VTK_LIBRARIES}
 ${MESA_LIBS}
 ${OPENGL_LIBRARIES}
 ${CMAKE_THREAD_LIBS} 
@@ -129,6 +130,7 @@
 visit_vtk
 ${ALL_THIRDPARTY_IO_LIB} 
 ${VTK_EXTRA_LIBS}
+${VTK_LIBRARIES}
 ${MESA_LIBS}
 ${OPENGL_LIBRARIES}
 ${CMAKE_THREAD_LIBS} 
@@ -151,6 +153,7 @@
 visit_vtk
 ${ALL_THIRDPARTY_IO_LIB} 
 ${VTK_EXTRA_LIBS}
+${VTK_LIBRARIES}
 ${MESA_LIBS}
 ${OPENGL_LIBRARIES}
 ${CMAKE_THREAD_LIBS} 
@@ -177,6 +180,7 @@
 visit_vtk
 ${ALL_THIRDPARTY_IO_LIB} 
 ${VTK_EXTRA_LIBS}
+${VTK_LIBRARIES}
 ${MESA_LIBS}
 ${OPENGL_LIBRARIES}
 ${CMAKE_THREAD_LIBS} 
@@ -204,6 +208,7 @@
 visit_vtk
 ${ALL_THIRDPARTY_IO_LIB} 
 ${VTK_EXTRA_LIBS}
+${VTK_LIBRARIES}
 ${MESA_LIBS}
 ${OPENGL_LIBRARIES}
 ${CMAKE_THREAD_LIBS} 
--- a/src/tools/convert/CMakeLists.txt
+++ b/src/tools/convert/CMakeLists.txt
@@ -105,11 +105,8 @@
 )
 
 SET(VTK_EXTRA_LIBS
-vtkjpeg
-vtkpng
-${VTKZLIB_LIB}
+${VTK_LIBRARIES}
 ${VTK_FREETYPE_LIBRARIES}
-vtkftgl
 )
 
 IF(VISIT_STATIC)
--- a/src/viewer/main/CMakeLists.txt
+++ b/src/viewer/main/CMakeLists.txt
@@ -297,11 +297,8 @@
     ${viewer_exe_IPlot}
     ${viewer_exe_VPlot}
     viewer
-    vtkpng
-    vtkjpeg
-    ${VTKZLIB_LIB}
     ${VTK_FREETYPE_LIBRARIES}
-    vtkftgl
+	${VTK_LIBRARIES}
 )
 
 # If we're building statically then the viewer can't be linked until the plugin
--- a/src/sim/V2/runtime/CMakeLists.txt
+++ b/src/sim/V2/runtime/CMakeLists.txt
@@ -160,7 +160,7 @@
 )
 
 ADD_LIBRARY(simV2runtime_ser ${LIBSIM_RUNTIME_SOURCES} ${LIBSIM_STATIC_SOURCES})
-TARGET_LINK_LIBRARIES(simV2runtime_ser engine_ser ${LIBSIM_RUNTIME_VIEWER_LIBS_SER})
+TARGET_LINK_LIBRARIES(simV2runtime_ser engine_ser ${LIBSIM_RUNTIME_VIEWER_LIBS_SER} ${VTK_LIBRARIES})
 
 IF(NOT APPLE)
     SET_TARGET_PROPERTIES(simV2runtime_ser PROPERTIES INSTALL_RPATH "$ORIGIN")
--- a/src/engine/main/CMakeLists.txt
+++ b/src/engine/main/CMakeLists.txt
@@ -195,11 +195,8 @@
     ${engine_ser_exe_EPlot_ser}
     engine_ser 
     visit_verdict 
-    vtkjpeg
-    vtkpng
-    ${VTKZLIB_LIB}
     ${VTK_FREETYPE_LIBRARIES}
-    vtkftgl
+    ${VTK_LIBRARIES}
     ${ALL_THIRDPARTY_IO_LIB}
     ${TCMALLOC_LIB}
     ${CMAKE_THREAD_LIBS} 
@@ -298,11 +295,8 @@
         ${engine_par_exe_EPlot_par}
         engine_par
         visit_verdict 
-        vtkjpeg
-        vtkpng
-        ${VTKZLIB_LIB}
+        ${VTK_LIBRAIRIES}
         ${VTK_FREETYPE_LIBRARIES}
-        vtkftgl
         ${ALL_THIRDPARTY_IO_LIB}
         ${ICET_STATIC_LIB}
         ${TCMALLOC_LIB}
--- a/src/tools/embedviewer/CMakeLists.txt
+++ b/src/tools/embedviewer/CMakeLists.txt
@@ -180,6 +180,7 @@
 visit_vtk
 vtkqt
 ${VIEWER_QT_LIBS}
+${VTK_LIBRARIES}
 )
 
 TARGET_LINK_LIBRARIES(embedded ${EMBEDDED_VIEWER_LIBS})
--- a/src/tools/mcurvit/CMakeLists.txt
+++ b/src/tools/mcurvit/CMakeLists.txt
@@ -108,14 +108,7 @@
 ${QT_QTXML_INCLUDE_DIR}
 )
 
-SET(VTK_EXTRA_LIBS
-vtktiff
-vtkjpeg
-vtkpng
-${VTKZLIB_LIB}
-${VTK_FREETYPE_LIBRARIES}
-vtkftgl
-)
+SET(VTK_EXTRA_LIBS ${VTK_LIBRARIES})
 
 LINK_DIRECTORIES(${LIBRARY_OUTPUT_DIRECTORY} ${QT_LIBRARY_DIR} ${MESA_LIBRARY_DIR} ${GLEW_LIBRARY_DIR} ${EAVL_LIBRARY_DIR} ${VTK_LIBRARY_DIRS})
 
